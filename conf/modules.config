process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

            withName: 'BOWTIE2_BUILD' {
            ext.args = '--seed 1'
            publishDir = [
                path: { "${params.outdir}/genome" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                enabled: params.save_reference
            ]
        }

        withName: 'BOWTIE2_BUILD' {
            ext.args = '--seed 1'
            publishDir = [
                path: { "${params.outdir}/genome" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                enabled: params.save_reference
            ]
        }

        withName: 'BOWTIE2_ALIGN' {
            ext.args = '--local --very-sensitive-local --seed 1'
            ext.args2 = '-F4 -bhS'
            publishDir = [
                [
                    path: { "${params.outdir}/variants/bowtie2/log" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/variants/bowtie2/unmapped" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fastq.gz",
                    enabled: params.save_unaligned
                ]
            ]
        }

     
    withName: '.*:.*:PREPARE_GENOME:GUNZIP_.*' {
        publishDir = [
            path: { "${params.outdir}/genome" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }
}
